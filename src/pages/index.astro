---
import { Image } from 'astro:assets'
import PageLayout from '@/layouts/BaseLayout.astro'
import IntegrationCard from '@/components/home/IntegrationCard.astro'
import GradientText from '@/components/ui/GradientText.astro'
import config from '../site.config'
import '../styles/animations.css'
import '../styles/glass.css'

// Define the navigation items
const navigationItems = [
  {
    href: "/about",
    title: "About",
    logo: "/navigation-icons/user.svg",
    primaryColor: "169, 169, 169", // Silver
    secondaryColor: "120, 120, 120" // Darker silver
  },
  {
    href: "/blog",
    title: "Blog",
    logo: "/navigation-icons/blog.svg",
    primaryColor: "52, 211, 153", // Green
    secondaryColor: "16, 185, 129" // Teal
  },
  {
    href: "/projects",
    title: "Projects",
    logo: "/navigation-icons/projects.svg",
    primaryColor: "56, 189, 248", // Jean blue
    secondaryColor: "14, 165, 233" // Darker blue
  },
  {
    href: "/about/resume",
    title: "Resume",
    logo: "/navigation-icons/docs.svg", // Using the same docs icon
    primaryColor: "139, 92, 246", // Purple
    secondaryColor: "124, 58, 237" // Darker purple
  },
  {
    href: "/archives",
    title: "Archives",
    logo: "/navigation-icons/archives.svg",
    primaryColor: "249, 115, 22", // Orange
    secondaryColor: "234, 88, 12" // Darker orange
  },
  {
    href: "/links",
    title: "Links",
    logo: "/navigation-icons/links.svg",
    primaryColor: "236, 72, 153", // Pink
    secondaryColor: "219, 39, 119" // Darker pink
  }
]

// Social links for the minimal header icons
const socialLinks = [
  {
    href: "https://github.com/yourusername", // Keep this as is or update with actual GitHub username
    label: "GitHub",
    icon: "github"
  },
  {
    href: "https://twitter.com/yourusername", // Keep this as is or update with actual Twitter username
    label: "Twitter",
    icon: "twitter"
  },
  {
    href: "https://linkedin.com/in/pruthvi-bhat-",
    label: "LinkedIn",
    icon: "linkedin"
  }
]
---

<style>
  /* Pitch black to dark grey gradient background */
  :global(body) {
    background: linear-gradient(to bottom, #000000, #121212);
  }
  
  /* Removed network node styles for performance */
  
  /* Social icons with vibrant hover effects */
  .social-icon {
    filter: drop-shadow(0 0 3px rgba(169, 169, 169, 0));
    transition: all 0.2s cubic-bezier(0.19, 1, 0.22, 1);
    position: relative;
    z-index: 1;
  }
  
  .social-icon:hover {
    filter: drop-shadow(0 0 5px rgba(169, 169, 169, 0.5));
    transform: translateY(-2px);
  }
  
  /* Different colors for each social icon */
  .social-icon:nth-child(1):hover {
    color: rgba(56, 189, 248, 1); /* Blue */
  }
  
  .social-icon:nth-child(2):hover {
    color: rgba(236, 72, 153, 1); /* Pink */
  }
  
  .social-icon:nth-child(3):hover {
    color: rgba(52, 211, 153, 1); /* Green */
  }
  
  /* Enhanced navigation cards container - moved higher */
  .nav-container {
    margin-top: 0.5rem;
  }
  
  @media (min-width: 768px) {
    .nav-container {
      transform: scale(1.05);
    }
  }
  
  /* Refined smoky effect with uneven edges and grey tones */
  .dynamic-gray-effect {
    position: absolute;
    inset: 0;
    overflow: hidden;
    z-index: 0;
    opacity: 1;
    background: #000;
    will-change: auto;
  }
  
  .gradient-orb {
    position: absolute;
    border-radius: 50%;
    filter: blur(70px);
    mix-blend-mode: screen;
    pointer-events: none;
    transform-origin: center center;
    will-change: transform;
    /* Uneven mask for more dynamic edges */
    mask-image: radial-gradient(ellipse at center, 
      rgba(255, 255, 255, 1) 30%, 
      rgba(255, 255, 255, 0.8) 50%, 
      rgba(255, 255, 255, 0) 80%
    );
    -webkit-mask-image: radial-gradient(ellipse at center, 
      rgba(255, 255, 255, 1) 30%, 
      rgba(255, 255, 255, 0.8) 50%, 
      rgba(255, 255, 255, 0) 80%
    );
  }
  
  .orb-1 {
    top: calc(50% - 30vw);
    left: calc(50% - 30vw);
    width: 60vw;
    height: 60vw;
    background: radial-gradient(circle, 
      rgba(90, 180, 230, 0.25) 0%,
      rgba(66, 130, 220, 0.12) 35%,
      rgba(40, 50, 60, 0.08) 55%,
      rgba(0, 0, 0, 1) 75%
    );
    opacity: 0.45;
    animation: smoke-orbit 15s ease-in-out infinite;
  }
  
  .orb-2 {
    top: calc(50% - 25vw);
    left: calc(50% - 25vw);
    width: 50vw;
    height: 50vw;
    background: radial-gradient(circle, 
      rgba(72, 200, 170, 0.25) 0%,
      rgba(50, 150, 140, 0.12) 30%,
      rgba(45, 60, 55, 0.08) 50%,
      rgba(0, 0, 0, 1) 75%
    );
    opacity: 0.4;
    animation: smoke-orbit 12s ease-in-out infinite reverse;
  }
  
  /* Add a third smaller smoke element with grey blend */
  .dynamic-gray-effect::after {
    content: '';
    position: absolute;
    top: calc(50% - 20vw);
    left: calc(50% - 20vw);
    width: 40vw;
    height: 40vw;
    border-radius: 50%;
    background: radial-gradient(circle, 
      rgba(120, 140, 160, 0.2) 0%,
      rgba(80, 90, 110, 0.1) 40%,
      rgba(50, 55, 65, 0.06) 60%,
      rgba(0, 0, 0, 1) 75%
    );
    filter: blur(65px);
    mix-blend-mode: screen;
    opacity: 0.35;
    animation: smoke-detail 10s ease-in-out infinite;
    transform-origin: center center;
    /* Uneven mask for dynamic edges */
    mask-image: radial-gradient(ellipse at center, 
      rgba(255, 255, 255, 1) 20%, 
      rgba(255, 255, 255, 0.6) 60%, 
      rgba(255, 255, 255, 0) 80%
    );
    -webkit-mask-image: radial-gradient(ellipse at center, 
      rgba(255, 255, 255, 1) 20%, 
      rgba(255, 255, 255, 0.6) 60%, 
      rgba(255, 255, 255, 0) 80%
    );
  }
  
  /* Add subtle noise texture for more uneven appearance */
  .dynamic-gray-effect::before {
    content: '';
    position: absolute;
    inset: 0;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    opacity: 0.03;
    mix-blend-mode: overlay;
    pointer-events: none;
  }
  
  @keyframes smoke-orbit {
    0% {
      transform: translate(-5%, -5%) rotate(0deg) scale(1);
    }
    33% {
      transform: translate(5%, -2%) rotate(2deg) scale(1.03);
    }
    66% {
      transform: translate(-2%, 4%) rotate(-2deg) scale(0.97);
    }
    100% {
      transform: translate(-5%, -5%) rotate(0deg) scale(1);
    }
  }
  
  @keyframes smoke-detail {
    0% {
      transform: translate(5%, 2%) rotate(0deg) scale(1);
      opacity: 0.5;
    }
    50% {
      transform: translate(-3%, -3%) rotate(3deg) scale(1.5);
      opacity: 0.62;
    }
    100% {
      transform: translate(10%, 8%) rotate(9deg) scale(1.2);
      opacity: 0.4;
    }
  }
  
  /* Brighter silver text styling with subtle metallic effect */
  .silver-text {
    background: linear-gradient(to bottom, rgba(250, 250, 255, 0.95), rgba(200, 200, 220, 0.9));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  }
</style>

<PageLayout meta={{ title: config.title, description: config.description }}>
  <div class="min-h-screen flex flex-col items-center justify-start pt-16 md:pt-24 pb-12 relative overflow-hidden" id="hero-container">
    <!-- Simplified dynamic background effect with only 2 orbs -->
    <div class="dynamic-gray-effect">
      <div class="gradient-orb orb-1"></div>
      <div class="gradient-orb orb-2"></div>
    </div>
    
    <!-- Main content -->
    <div class="z-10 flex flex-col items-center w-full max-w-4xl px-4 mx-auto">
      <!-- Hero name with silver effect -->
      <div class="text-center mb-6">
        <h1 class="text-5xl sm:text-7xl font-bold text-center relative mb-4">
          <span class="silver-text leading-tight tracking-tight font-extrabold">
            Pruthvi Bhat
          </span>
        </h1>
        
        <p class="text-lg mb-4 max-w-xl mx-auto">
          <span class="silver-text font-medium">
            A living archive of my thoughts, discipline, and evolution.
          </span>
        </p>
        
        <!-- Minimal social links -->
        <div class="flex justify-center gap-5 mt-3">
          {socialLinks.map(link => (
            <a 
              href={link.href}
              target="_blank"
              rel="noopener noreferrer"
              class="text-gray-400 social-icon"
              aria-label={link.label}
            >
              <svg 
                class="w-4 h-4 sm:w-5 sm:h-5"
                fill="currentColor" 
                viewBox="0 0 24 24" 
                aria-hidden="true"
              >
                {link.icon === 'github' && 
                  <path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd" />
                }
                {link.icon === 'twitter' && 
                  <path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84" />
                }
                {link.icon === 'linkedin' && 
                  <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452z" />
                }
              </svg>
            </a>
          ))}
        </div>
        
        <!-- CTA text -->
        <p class="text-sm text-gray-400 mt-4 tracking-wide font-light animate-fade delay-500">
          Explore. Learn. Execute.
        </p>
      </div>
      
      <!-- Navigation cards - moved higher -->
      <div class="nav-container w-full">
        <ul class="mx-auto grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-6 gap-3 sm:gap-4 w-max">
          {navigationItems.map(item => (
            <IntegrationCard
              href={item.href}
              title={item.title}
              logo={item.logo}
              primaryColor={item.primaryColor}
              secondaryColor={item.secondaryColor}
            />
          ))}
        </ul>
      </div>
    </div>
  </div>
</PageLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Optimize orb animation
    const orbs = document.querySelectorAll('.gradient-orb');
    if (orbs.length > 0) {
      // Force hardware acceleration for smoother animation
      orbs.forEach(orb => {
        orb.style.willChange = 'transform';
        orb.style.backfaceVisibility = 'hidden';
      });
    }
    
    // Initialize cards animation with a more optimized approach
    const cards = document.querySelectorAll('.nav-container li');
    
    // Prepare cards with initial state
    cards.forEach((card) => {
      card.style.opacity = '0';
      card.style.transform = 'translateY(15px) scale(0.95)';
      card.style.transition = 'all 0.2s cubic-bezier(0.19, 1, 0.22, 1)';
    });
    
    // Define a snappier staggered animation sequence
    const baseDelay = 30; // ms - faster initial delay
    const staggerDelay = 25; // ms - faster stagger between cards
    
    // Function to get a small random offset for slightly varied timings
    const getRandomOffset = () => Math.random() * 10 - 5; // -5 to +5ms
    
    // Apply animation with snappier timing
    cards.forEach((card, index) => {
      setTimeout(() => {
        card.style.opacity = '1';
        card.style.transform = 'translateY(0) scale(1)';
        
        // Add subtle bounce effect after appearing
        setTimeout(() => {
          card.style.transform = 'translateY(-3px) scale(1.02)';
          
          setTimeout(() => {
            card.style.transform = 'translateY(0) scale(1)';
          }, 120);
        }, 120);
      }, baseDelay + (index * staggerDelay) + getRandomOffset());
    });
  });