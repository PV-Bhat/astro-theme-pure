---
import { getBlogCollection, sortMDByDate } from 'astro-pure/server'
import { Button, FormattedDate } from 'astro-pure/user'
import PageLayout from '@/layouts/BaseLayout.astro'
import Breadcrumbs from '@/components/core/Breadcrumbs.astro'
import config from '../../site.config'
import '../../styles/animations.css'
import '../../styles/glass.css'

// Breadcrumb items
const breadcrumbItems = [
  {
    label: "Blog",
    href: "/blog"
  },
  {
    label: "Archives",
    href: "/blog/archives"
  }
];

const meta = {
  title: 'Archives | Personal Philosophy',
  description: 'Collection of personal philosophy, reflections, and wisdom',
}

// Get blog posts and filter for archives (in reality you would have a field to mark posts as archives)
const allPosts = await getBlogCollection();
// Simulate archive posts by selecting posts with "philosophy" tag
const archivePosts = sortMDByDate(allPosts.filter(post => 
  post.data.tags.some(tag => 
    ["philosophy", "mind", "reflection", "thinking"].includes(tag.toLowerCase())
  )
));

// Get sorting preference from URL params
const { searchParams } = Astro.url;
const sortOrder = searchParams.get('sort') || 'newest';

// Sort by date
let sortedPosts = [...archivePosts];
if (sortOrder === 'oldest') {
  // Reverse the order for oldest first
  sortedPosts.reverse();
}

// Get sample quotes from posts (in production, you'd have actual quotes in your content)
const sampleQuotes = [
  "The hardest choices require the strongest wills. But they also build the strongest character.",
  "Your mind is a canvas. The models you choose to paint on it determine what you see in the world.",
  "The most valuable skill of the 21st century might be the ability to sit quietly in a room alone.",
  "Play infinite games. The goal isn't to win, but to continue playing.",
  "Your life today is essentially the sum of your habits and decisions.",
  "Strong opinions, loosely held. The best thinkers are those willing to be wrong.",
  "In a world of complex systems, monocultures of thought are increasingly dangerous."
];
---

<PageLayout {meta}>
  <div class="max-w-3xl mx-auto px-4">
    <!-- Breadcrumbs navigation -->
    <div class="mb-6">
      <Breadcrumbs items={breadcrumbItems} />
    </div>
    
    <!-- Back button, matching original theme style -->
    <div class="mb-4">
      <Button title='Back' href='/blog' style='back' />
    </div>
    
    <!-- Header with explanation - more minimal -->
    <div class="mb-10">
      <h1 class="text-4xl font-bold mb-3 bg-clip-text text-transparent bg-gradient-to-b from-white to-gray-400 silver-text">
        Archives
      </h1>
      
      <div class="glass-card p-4 rounded-lg border border-white/10">
        <p class="text-gray-300 text-sm leading-relaxed">
          A collection of personal philosophy and reflections inspired by 
          <a href="https://nav.al/" target="_blank" rel="noopener noreferrer" class="text-green-400 hover:text-green-300 transition-colors">
            Naval Ravikant
          </a>. These writings explore fundamental principles of life, meaning, and growth.
        </p>
      </div>
      
      <!-- Simple filter controls -->
      <div class="flex justify-between items-center my-6">
        <div class="flex gap-2">
          <button id="newest-first" class="px-3 py-1 text-sm rounded-full bg-green-500/20 text-green-400 border border-green-500/30">
            Newest First
          </button>
          <button id="oldest-first" class="px-3 py-1 text-sm rounded-full bg-black/20 text-gray-300 border border-white/5 hover:bg-black/40 transition-colors">
            Oldest First
          </button>
        </div>
      </div>
    </div>
    
    <!-- Philosophy Posts - Timeline Style -->
    <div class="relative pl-8 border-l border-gray-800 space-y-10 mb-16">
      {sortedPosts.map((post, index) => (
        <div class="relative group">
          <!-- Timeline dot -->
          <div class="absolute -left-[21px] h-5 w-5 rounded-full bg-gradient-to-br from-gray-700 to-gray-900 border border-gray-600 group-hover:border-green-500 transition-all duration-300"></div>
          
          <!-- Date indicator line -->
          <div class="absolute -left-4 top-0 h-[1px] w-4 bg-gray-600 group-hover:bg-green-500 transition-colors duration-300"></div>
          
          <!-- Content -->
          <a href={`/blog/${post.slug}`} class="block transform group-hover:translate-x-1 transition-transform duration-300">
            <div class="mb-1 text-sm text-gray-400 font-mono">
              <FormattedDate date={post.data.publishDate} />
            </div>
            <h2 class="text-xl font-medium group-hover:text-green-400 transition-colors mb-2">{post.data.title}</h2>
            
            <blockquote class="text-gray-300 italic text-sm border-l-2 border-green-500/50 pl-3 py-1">
              "{sampleQuotes[index % sampleQuotes.length]}"
            </blockquote>
            
            {post.data.tags && post.data.tags.length > 0 && (
              <div class="flex flex-wrap gap-2 mt-3">
                {post.data.tags.slice(0, 3).map(tag => (
                  <a href={`/tags/${tag}`} class="text-xs px-2 py-0.5 rounded-full bg-black/30 text-gray-300 hover:bg-green-500/10 hover:text-green-300 transition-colors">
                    {tag}
                  </a>
                ))}
              </div>
            )}
          </a>
        </div>
      ))}
      
      {sortedPosts.length === 0 && (
        <div class="py-10 text-center">
          <p class="text-gray-400">No archive posts available yet.</p>
        </div>
      )}
    </div>
    
    <!-- Archive information note removed -->
  </div>
</PageLayout>

<style>
  /* Silver text effect */
  .silver-text {
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  }
  
  /* Glass card styling */
  .glass-card {
    background: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }
</style>

<script>
  // Simple sorting controls
  document.addEventListener('DOMContentLoaded', () => {
    const newestButton = document.getElementById('newest-first');
    const oldestButton = document.getElementById('oldest-first');
    const currentSort = new URLSearchParams(window.location.search).get('sort') || 'newest';
    
    // Set initial active state based on current sort parameter
    if (currentSort === 'oldest') {
      oldestButton?.classList.add('bg-green-500/20', 'text-green-400', 'border-green-500/30');
      oldestButton?.classList.remove('bg-black/20', 'text-gray-300', 'border-white/5');
      
      newestButton?.classList.add('bg-black/20', 'text-gray-300', 'border-white/5');
      newestButton?.classList.remove('bg-green-500/20', 'text-green-400', 'border-green-500/30');
    }
    
    // Toggle active state on buttons
    newestButton?.addEventListener('click', () => {
      if (currentSort === 'newest') return; // Already sorted newest first
      
      newestButton.classList.add('bg-green-500/20', 'text-green-400', 'border-green-500/30');
      newestButton.classList.remove('bg-black/20', 'text-gray-300', 'border-white/5');
      
      oldestButton?.classList.add('bg-black/20', 'text-gray-300', 'border-white/5');
      oldestButton?.classList.remove('bg-green-500/20', 'text-green-400', 'border-green-500/30');
      
      // Preserve other URL parameters when changing sort
      const url = new URL(window.location.href);
      url.searchParams.set('sort', 'newest');
      
      window.location.href = url.toString();
    });
    
    oldestButton?.addEventListener('click', () => {
      if (currentSort === 'oldest') return; // Already sorted oldest first
      
      oldestButton.classList.add('bg-green-500/20', 'text-green-400', 'border-green-500/30');
      oldestButton.classList.remove('bg-black/20', 'text-gray-300', 'border-white/5');
      
      newestButton?.classList.add('bg-black/20', 'text-gray-300', 'border-white/5');
      newestButton?.classList.remove('bg-green-500/20', 'text-green-400', 'border-green-500/30');
      
      // Preserve other URL parameters when changing sort
      const url = new URL(window.location.href);
      url.searchParams.set('sort', 'oldest');
      
      window.location.href = url.toString();
    });
  });
</script>
