---
interface Props {
  title: string;
  description: string;
  icon: 'gear' | 'calendar' | 'chart' | 'chat' | 'shield' | 'users';
  class?: string;
}

const { 
  title, 
  description, 
  icon, 
  class: className = "" 
} = Astro.props;

// Map of icon components
const icons = {
  gear: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z" />
      <path d="M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z" />
      <path d="M12 2v2" />
      <path d="M12 22v-2" />
      <path d="m17 20.66-1-1.73" />
      <path d="M11 10.27 7 3.34" />
      <path d="m20.66 17-1.73-1" />
      <path d="m3.34 7 1.73 1" />
      <path d="M14 12h8" />
      <path d="M2 12h2" />
      <path d="m20.66 7-1.73 1" />
      <path d="m3.34 17 1.73-1" />
      <path d="m17 3.34-1 1.73" />
      <path d="m7 20.66 1-1.73" />
    </svg>`,
  calendar: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <rect width="18" height="18" x="3" y="4" rx="2" ry="2" />
      <line x1="16" x2="16" y1="2" y2="6" />
      <line x1="8" x2="8" y1="2" y2="6" />
      <line x1="3" x2="21" y1="10" y2="10" />
    </svg>`,
  chart: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M12 2v20" />
      <path d="M2 5h20" />
      <path d="M2 12h20" />
      <path d="M2 19h20" />
      <circle cx="12" cy="5" r="2" />
      <circle cx="12" cy="12" r="2" />
      <circle cx="12" cy="19" r="2" />
    </svg>`,
  chat: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="m3 21 1.9-5.7a8.5 8.5 0 1 1 3.8 3.8z" />
    </svg>`,
  shield: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10" />
    </svg>`,
  users: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" />
      <circle cx="9" cy="7" r="4" />
      <path d="M22 21v-2a4 4 0 0 0-3-3.87" />
      <path d="M16 3.13a4 4 0 0 1 0 7.75" />
    </svg>`
};

// Get the correct icon fragment
const iconSvg = icons[icon];
---

<div class={`feature-card relative overflow-hidden rounded-xl transition-all duration-300 ${className} group hover:-translate-y-1`}>
  <!-- Background elements -->
  <div class="absolute inset-0 bg-[#0a0f1c]/90 border border-white/10 rounded-xl z-0"></div>
  
  <!-- Glow effects -->
  <div class="absolute top-6 left-6 w-12 h-12 rounded-lg bg-[#34D399]/10 -z-10 blur-xl"></div>
  
  <!-- Content -->
  <div class="relative flex flex-col p-6 h-full z-10">
    <div class="mb-5 flex h-12 w-12 items-center justify-center rounded-lg bg-gradient-to-br from-[#34D399]/20 to-[#10B981]/20 text-[#34D399]">
      <span class="h-6 w-6" set:html={iconSvg} />
    </div>
    
    <h3 class="text-lg font-medium text-white mb-2">{title}</h3>
    <p class="text-gray-400 text-sm flex-grow">{description}</p>
    
    <!-- Hover effect -->
    <div class="absolute inset-0 bg-gradient-to-br from-[#34D399]/5 to-[#10B981]/5 opacity-0 transition-opacity duration-300 pointer-events-none group-hover:opacity-100"></div>
    
    <!-- Background noise -->
    <div
      class="w-full h-full absolute inset-0 bg-[url(/noise.svg)] opacity-0 group-hover:opacity-10 transition-opacity duration-300 rounded-xl"
    >
    </div>
  </div>
</div>

<style>
  /* Card lift & shadow effect on hover */
  .feature-card {
    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }
  
  .feature-card:hover {
    box-shadow: 0 0 15px rgba(52, 211, 153, 0.15);
  }
  
  /* Subtle glow pulse around icon */
  @keyframes iconGlow {
    0% {
      box-shadow: 0 0 0 0 rgba(52, 211, 153, 0.4);
    }
    70% {
      box-shadow: 0 0 0 10px rgba(52, 211, 153, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(52, 211, 153, 0);
    }
  }
  
  .feature-card:hover .rounded-lg {
    animation: iconGlow 2s infinite;
  }
</style> 