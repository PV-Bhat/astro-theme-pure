---
interface Props {
  tags: string[];
  baseUrl?: string;
  showCount?: boolean;
  counts?: Record<string, number>;
}

const { 
  tags, 
  baseUrl = '/tags',
  showCount = false,
  counts = {}
} = Astro.props;

// Sort tags alphabetically
const sortedTags = [...tags].sort();

// Debug log
console.log(`TagCloud: ${sortedTags.length} tags found`);
---

<div class="tag-cloud">
  {sortedTags.map(tag => {
    // Ensure tag is trimmed and formatted consistently
    const tagKey = tag.trim().toLowerCase();
    const count = counts[tagKey] || 0;
    
    return (
      <a 
        href={`${baseUrl}/${tagKey}`} 
        class="tag"
        title={`${count} posts`}
      >
        #{tag}
        {showCount && count > 0 && (
          <span class="tag-count">({count})</span>
        )}
      </a>
    );
  })}
</div>

<style>
  .tag-cloud {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin: 1rem 0;
  }

  .tag {
    display: inline-flex;
    align-items: center;
    padding: 0.25rem 0.75rem;
    border-radius: 999px;
    background-color: rgba(10, 10, 10, 0.7);
    color: rgba(220, 220, 220, 0.9);
    text-decoration: none;
    font-size: 0.875rem;
    transition: all 0.2s ease; /* Make transition faster */
    border: 1px solid rgba(169, 169, 169, 0.2);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }

  .tag:hover {
    background-color: rgba(15, 15, 15, 0.8);
    transform: translateY(-2px);
    box-shadow: 0 2px 8px rgba(169, 169, 169, 0.2);
    border-color: rgba(169, 169, 169, 0.5);
    color: rgba(255, 255, 255, 1);
    transition: all 0.2s ease; /* Make transition faster */
  }

  /* Add a subtle pulse animation on hover */
  @keyframes tag-pulse {
    0%, 100% {
      transform: translateY(-2px) scale(1);
    }
    50% {
      transform: translateY(-2px) scale(1.03);
    }
  }
  
  .tag:hover {
    animation: tag-pulse 1s ease-in-out infinite; /* Reduced from 1.5s to 1s */
  }

  .tag-count {
    margin-left: 0.25rem;
    font-size: 0.75rem;
    opacity: 0.8;
  }
</style> 