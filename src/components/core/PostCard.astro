---
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';

interface Props {
  post: CollectionEntry<'blog' | 'projects'>;
  type?: 'blog' | 'project';
}

interface HeroImage {
  src: string | ImageMetadata;
  alt?: string;
}

const { post, type = 'blog' } = Astro.props;

const isProject = type === 'project';
const { title, description, heroImage, tags, publishDate } = post.data;
const postUrl = `/${type}/${post.id}`;
---

<article class="group relative flex flex-col overflow-hidden rounded-lg border border-border bg-card p-6 hover:border-primary/50">
  {heroImage && (
    <div class="aspect-video overflow-hidden rounded-lg">
      <Image
        src={heroImage.src}
        alt={heroImage.alt || title}
        width={800}
        height={450}
        class="h-full w-full object-cover transition-transform duration-300 group-hover:scale-105"
      />
    </div>
  )}
  
  <div class="flex flex-1 flex-col justify-between">
    <div class="flex-1">
      <a href={postUrl} class="mt-4 block">
        <h3 class="text-xl font-semibold text-foreground transition-colors group-hover:text-primary">
          {title}
        </h3>
        {description && (
          <p class="mt-3 text-muted-foreground line-clamp-3">
            {description}
          </p>
        )}
      </a>
    </div>
    
    {tags && tags.length > 0 && (
      <div class="mt-4 flex flex-wrap gap-2">
        {tags.map((tag) => (
          <a
            href={`/tags/${tag}`}
            class="inline-flex items-center rounded-full bg-muted px-2.5 py-0.5 text-xs font-medium text-muted-foreground transition-colors hover:bg-primary/20 hover:text-primary"
          >
            {tag}
          </a>
        ))}
      </div>
    )}
  </div>
</article> 