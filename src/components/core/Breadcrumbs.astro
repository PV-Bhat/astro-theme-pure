---
import '../../styles/glass.css';

interface BreadcrumbItem {
  label: string;
  href: string;
}

interface Props {
  items: BreadcrumbItem[];
  class?: string;
}

const { items, class: className = "" } = Astro.props;
---

<div class={`breadcrumbs-container glass-dark px-3 py-2 rounded-full inline-flex items-center ${className}`}>
  <nav class="breadcrumbs" aria-label="Breadcrumb navigation">
    <ol class="flex items-center space-x-1 text-sm list-none">
      <li class="breadcrumb-item">
        <a 
          href="/" 
          class="text-gray-400 hover:text-white flex items-center transition-colors duration-300"
          aria-label="Home"
        >
          <svg 
            xmlns="http://www.w3.org/2000/svg" 
            class="h-4 w-4" 
            fill="none" 
            viewBox="0 0 24 24" 
            stroke="currentColor"
          >
            <path 
              stroke-linecap="round" 
              stroke-linejoin="round" 
              stroke-width="2" 
              d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" 
            />
          </svg>
        </a>
      </li>
      
      {items.map((item, index) => (
        <>
          <li class="breadcrumb-separator">
            <span class="text-gray-600">
              <svg 
                xmlns="http://www.w3.org/2000/svg" 
                class="h-4 w-4" 
                fill="none" 
                viewBox="0 0 24 24" 
                stroke="currentColor"
              >
                <path 
                  stroke-linecap="round" 
                  stroke-linejoin="round" 
                  stroke-width="2" 
                  d="M9 5l7 7-7 7" 
                />
              </svg>
            </span>
          </li>
          <li class={`breadcrumb-item ${index === items.length - 1 ? 'current' : ''}`}>
            <a 
              href={item.href} 
              class={`
                flex items-center gap-1 transition-all duration-300 relative whitespace-nowrap
                ${index === items.length - 1 
                  ? 'text-[#a9a9a9] font-medium pointer-events-none' 
                  : 'text-gray-400 hover:text-white breadcrumb-link'}
              `}
              aria-current={index === items.length - 1 ? 'page' : undefined}
            >
              <span>{item.label}</span>
              
              {index === items.length - 1 && (
                <span class="animate-pulse-subtle">
                  <span class="sr-only">Current page</span>
                  <span class="inline-block h-1.5 w-1.5 rounded-full bg-[#a9a9a9]"></span>
                </span>
              )}
            </a>
          </li>
        </>
      ))}
    </ol>
  </nav>
</div>

<style>
  .breadcrumb-link {
    position: relative;
    overflow: hidden;
  }
  
  .breadcrumb-link::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: currentColor;
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 0.3s ease;
  }
  
  .breadcrumb-link:hover::after {
    transform: scaleX(1);
    transform-origin: left;
  }
  
  @keyframes pulse-subtle {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.6;
    }
  }
  
  .animate-pulse-subtle {
    animation: pulse-subtle 2s ease-in-out infinite;
  }
  
  .glass-dark {
    background: rgba(10, 10, 10, 0.6);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    border: 1px solid rgba(169, 169, 169, 0.1);
  }
  
  /* Fix for Safari browser */
  .breadcrumbs-container {
    width: auto;
    max-width: 100%;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none; /* Firefox */
  }
  
  .breadcrumbs-container::-webkit-scrollbar {
    display: none; /* Chrome, Safari, Edge */
  }
  
  /* Remove list markers and ensure proper styling */
  .breadcrumbs ol {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  
  .breadcrumbs li {
    display: flex;
    align-items: center;
  }
</style> 